@page "/savings/add"

@using SmartSaver.Presentation.Models
@using SmartSaver.Presentation.Helpers
@using System.Text.Json
@using SmartSaver.Presentation.Constants
@using SmartSaver.Presentation.Shared.Breadcrumbs

@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject IBreadcrumbService BreadcrumbService


<a class="btn btn-primary m-2" href="savings">Back</a>

<h1 class="h1">Create a new goal!</h1>
<div class="form-horizontal">
    <EditForm Model="@_goal" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label class="control-label col-sm-2"> Goal Name:</label>
            <div class="col-sm-10">
                <InputText class="form-control" id="goalName" @bind-Value="@_goal.GoalName" />
            </div>

            </div>
            <div class="form-group">
                <label class="control-label col-sm-2"> Finish date:</label>
                <div class="col-sm-10">
                <InputDate class="form-control" id="goalAmount" @bind-Value="@_goal.FinishDate" />

                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-sm-2"> Goal Amount:</label>
                <div class="col-sm-10">
                    <InputNumber class="form-control" id="goalAmount" @bind-Value="@_goal.GoalAmount" />
                </div>
                </div>
            <div class="form-group">
                <label class="control-label col-sm-2"> Description:</label>
                <div class="col-sm-10">
                    <InputText class="form-control" id="goalAmount" @bind-Value="@_goal.Description" />
                    </div>
                </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">

                <button type="submit" class="btn btn-primary">Create a new goal!</button>
            </div>
        </div>
</EditForm>
</div>



<Alert Type="@_alertType" Message="@_alertMessage" />

@code {
        string _alertMessage = "";
        string _alertType = "";

    private SavingGoal _goal = new SavingGoal()
    {
        StartDate = DateTime.Now,
        FinishDate = DateTime.Today.AddDays(1),
        UserId = Constants.TestUserId
    };



    protected async Task HandleSubmit()
    {
        _alertType = "";
        //static:
        SavingGoalsHelper._savingGoals = SavingGoalsHelper._savingGoals.Append(_goal).ToArray();
        SavingGoalsHelper.isAlreadyInit = true;
        _alertType = "success";
        _alertMessage = "Goal created successfully!";



        var response = await Http.PostAsJsonAsync<SavingGoal>(@"https://localhost:44301/savings", _goal);
        if (response.IsSuccessStatusCode)
        {
            _alertType = "success";
            _alertMessage = "Goal created successfully!";
        }
        else
        {
            /*
            _alertType = "danger";
            _alertMessage = "Goal was not created successfully";
            */
        }
    }

    protected override void OnInitialized()
    {
        InitializeBreadCrumbs();
    }



    private void InitializeBreadCrumbs()
    {
        BreadcrumbService.ClearList();
        BreadcrumbService.AddBreadcrumb("Savings", "/savings");
        BreadcrumbService.AddBreadcrumb("Goal Creation", "/savings");
        BreadcrumbService.InvokeBreadcrumbsChanged();
    }
}