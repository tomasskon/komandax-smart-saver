@page "/savings/goalcreation"

@using SmartSaver.Presentation.Models
@using SmartSaver.Presentation.Helpers
@using System.Text.Json
@using SmartSaver.Presentation.Constants
@using SmartSaver.Presentation.Shared.Breadcrumbs

@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject IBreadcrumbService BreadcrumbService


<div class="topnav">
    <a href="savings">Goals</a>
    <a class="active" href="savings/goalcreation">Create a new Goal</a>
    <a href="savings/goaledit">Add funds to your goal </a>
</div>

<h1 class="h1">Create a new goal!</h1>
<div class="form-control-lg">
    <EditForm Model="@_goal" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <p>
            <label> Goal Name:</label>
            <InputText id="goalName" @bind-Value="@_goal.GoalName" />
        </p>
        <p>
            <label> Finish date:</label>
            <InputDate id="goalAmount" @bind-Value="@_goal.FinishDate" />
        </p>
        <p>
            <label> Goal Amount:</label>
            <InputNumber id="goalAmount" @bind-Value="@_goal.GoalAmount" />
        </p>
        <p>
            <label> Description:</label>
            <InputText id="goalAmount" @bind-Value="@_goal.Description" />
        </p>
        <button type="submit" class="btn btn-primary">Create a new goal</button>
    </EditForm>
</div>





@code {
        string _alertMessage = "";
        string _alertType = "";

    private SavingGoal _goal = new SavingGoal()
    {
        StartDate = DateTime.Now,
        FinishDate = DateTime.Today.AddDays(1),
        UserId = Constants.TestUserId
    };



    protected async Task HandleSubmit()
    {
        _alertType = "";
        var response = await Http.PostAsJsonAsync<SavingGoal>(@"https://localhost:44301/savings", _goal);
        if (response.IsSuccessStatusCode)
        {
            _alertType = "success";
            _alertMessage = "Goal created successfully!";
        }
        else
        {
            _alertType = "danger";
            _alertMessage = "Goal was not created successfully";
        }
    }

    protected override void OnInitialized()
    {
        InitializeBreadCrumbs();
    }

    private void InitializeBreadCrumbs()
    {
        BreadcrumbService.ClearList();
        BreadcrumbService.AddBreadcrumb("Savings", "/savings");
        BreadcrumbService.AddBreadcrumb("Goal Creation", "/savings");
        BreadcrumbService.InvokeBreadcrumbsChanged();

    }
}