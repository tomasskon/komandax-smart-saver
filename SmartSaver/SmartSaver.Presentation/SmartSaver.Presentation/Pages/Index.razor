@page "/"
@using Microsoft.Extensions.Configuration
@using SmartSaver.Presentation.Models
@using SmartSaver.Presentation.Shared.Breadcrumbs
@using SmartSaver.Presentation.Shared.LoadingSpinner
@inject IConfiguration Configuration
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IBreadcrumbService BreadcrumbService

@if (_lastTransactions == null || _groupedTransactions == null)
{
    <LoadingSpinner />
}
else
{
    <div>
        <h1 class="mb-4">Hello!</h1>

        <div class="row">
            <div class="col-md-6">
                <h3>Your last 5 transactions</h3>
                <table class="table">
                    <tr>
                        <th>Amount</th>
                        <th>Category Name</th>
                        <th>Balance</th>
                        <th>Created At</th>
                    </tr>
                    @foreach (var transaction in _lastTransactions)
                    {
                        <tr>
                            <td>@transaction.AmountDouble €</td>
                            <td>@transaction.Category.Name</td>
                            <td>@transaction.BalanceType</td>
                            <td>@transaction.CreatedAt</td>
                        </tr>
                    }
                </table>
            </div>
            <div class="col-md-6">
                <h3>Your spent amount per category</h3>
                <table class="table">
                    <tr>
                        <th>Category Name</th>
                        <th>Amount</th>
                    </tr>
                    @foreach (var groupedTransaction in _groupedTransactions)
                    {
                        <tr>
                            <td>@groupedTransaction.Key</td>
                            <td>@groupedTransaction.SumDouble €</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
}

@code
{
private Transaction[] _lastTransactions;
private GroupedTransaction[] _groupedTransactions;

protected override async Task OnInitializedAsync()
{
    InitializeBreadCrumbs();
    await GetTableData();
}

private async Task GetTableData()
{
    try
    {
        _lastTransactions = await Http.GetFromJsonAsync<Transaction[]>($"{Configuration["requestUri"]}/transactions/last/5");
        _groupedTransactions = await Http.GetFromJsonAsync<GroupedTransaction[]>($"{Configuration["requestUri"]}/transactions/grouped");
    }
    catch (Exception)
    {
        NavigationManager.NavigateTo("/error");
    }
}

private void InitializeBreadCrumbs()
{
    BreadcrumbService.ClearList();
    BreadcrumbService.AddBreadcrumb("Home", "/Home");
    BreadcrumbService.InvokeBreadcrumbsChanged();
}
}

